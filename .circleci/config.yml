version: 5

job-setup: &job-setup
  docker:
    - image: circleci/node:10.13.0
  working_directory: ~/repo

restore-cache: &restore-cache
  keys:
    - v3-dependencies-{{ checksum "yarn.lock" }}
    # fallback to using the latest cache if no exact match is found
    - v3-dependencies-

save-cache: &save-cache
  paths:
    - node_modules
    - ~/.cache
  key: v3-dependencies-{{ checksum "yarn.lock" }}

install-packages: &install-packages
  name: Install Packages
  command: yarn

jobs:
  install:
    <<: *job-setup
    steps:
      # Fetch code
      - checkout

      # Download and cache dependencies
      - restore_cache: *restore-cache

      - run:
          name: Yarn Install
          command: yarn

      - run:
          name: Install Cypress
          command: node_modules/.bin/cypress install

      - save_cache: *save-cache

  lint:
    <<: *job-setup
    steps:
      - checkout

      - restore_cache: *restore-cache

      - save_cache: *save-cache

      - run:
          name: Lint Files
          command: yarn lint

  unit_tests:
    <<: *job-setup
    steps:
      - checkout

      - restore_cache: *restore-cache

      - run: *install-packages

      - run:
          name: Jest Suite
          command: yarn jest --ci --runInBand --coverage --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: 'reports/junit/js-test-results.xml'
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  integration_tests:
    <<: *job-setup
    steps:
      - checkout

      - restore_cache: *restore-cache

      - run: *install-packages

      - run:
          name: Start up website (using complete-config-project)
          command: yarn start:website:complete
          background: true

      - run:
          name: Cypress Suite
          command: node_modules/.bin/wait-on http://localhost:8000 && bolt cypress:run

workflows:
  version: 2
  build:
    jobs:
      - install
      - lint:
          requires:
            - install
      - unit_tests:
          requires:
            - install
      - integration_tests:
          requires:
            - install
